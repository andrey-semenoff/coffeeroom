// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$coffeebeans-name: 'coffeebeans';
$coffeebeans-x: 0px;
$coffeebeans-y: 0px;
$coffeebeans-offset-x: 0px;
$coffeebeans-offset-y: 0px;
$coffeebeans-width: 54px;
$coffeebeans-height: 54px;
$coffeebeans-total-width: 215px;
$coffeebeans-total-height: 166px;
$coffeebeans-image: '../img/spriteIcons.png';
$coffeebeans: (0px, 0px, 0px, 0px, 54px, 54px, 215px, 166px, '../img/spriteIcons.png', 'coffeebeans', );
$coffeepot-name: 'coffeepot';
$coffeepot-x: 0px;
$coffeepot-y: 114px;
$coffeepot-offset-x: 0px;
$coffeepot-offset-y: -114px;
$coffeepot-width: 51px;
$coffeepot-height: 52px;
$coffeepot-total-width: 215px;
$coffeepot-total-height: 166px;
$coffeepot-image: '../img/spriteIcons.png';
$coffeepot: (0px, 114px, 0px, -114px, 51px, 52px, 215px, 166px, '../img/spriteIcons.png', 'coffeepot', );
$cupcoffee-name: 'cupcoffee';
$cupcoffee-x: 0px;
$cupcoffee-y: 59px;
$cupcoffee-offset-x: 0px;
$cupcoffee-offset-y: -59px;
$cupcoffee-width: 54px;
$cupcoffee-height: 50px;
$cupcoffee-total-width: 215px;
$cupcoffee-total-height: 166px;
$cupcoffee-image: '../img/spriteIcons.png';
$cupcoffee: (0px, 59px, 0px, -59px, 54px, 50px, 215px, 166px, '../img/spriteIcons.png', 'cupcoffee', );
$cupheart-name: 'cupheart';
$cupheart-x: 173px;
$cupheart-y: 0px;
$cupheart-offset-x: -173px;
$cupheart-offset-y: 0px;
$cupheart-width: 42px;
$cupheart-height: 55px;
$cupheart-total-width: 215px;
$cupheart-total-height: 166px;
$cupheart-image: '../img/spriteIcons.png';
$cupheart: (173px, 0px, -173px, 0px, 42px, 55px, 215px, 166px, '../img/spriteIcons.png', 'cupheart', );
$kettle-name: 'kettle';
$kettle-x: 59px;
$kettle-y: 0px;
$kettle-offset-x: -59px;
$kettle-offset-y: 0px;
$kettle-width: 52px;
$kettle-height: 54px;
$kettle-total-width: 215px;
$kettle-total-height: 166px;
$kettle-image: '../img/spriteIcons.png';
$kettle: (59px, 0px, -59px, 0px, 52px, 54px, 215px, 166px, '../img/spriteIcons.png', 'kettle', );
$lupa-name: 'lupa';
$lupa-x: 173px;
$lupa-y: 60px;
$lupa-offset-x: -173px;
$lupa-offset-y: -60px;
$lupa-width: 24px;
$lupa-height: 25px;
$lupa-total-width: 215px;
$lupa-total-height: 166px;
$lupa-image: '../img/spriteIcons.png';
$lupa: (173px, 60px, -173px, -60px, 24px, 25px, 215px, 166px, '../img/spriteIcons.png', 'lupa', );
$lupeup-name: 'lupeup';
$lupeup-x: 116px;
$lupeup-y: 0px;
$lupeup-offset-x: -116px;
$lupeup-offset-y: 0px;
$lupeup-width: 52px;
$lupeup-height: 54px;
$lupeup-total-width: 215px;
$lupeup-total-height: 166px;
$lupeup-image: '../img/spriteIcons.png';
$lupeup: (116px, 0px, -116px, 0px, 52px, 54px, 215px, 166px, '../img/spriteIcons.png', 'lupeup', );
$icons-width: 215px;
$icons-height: 166px;
$icons-image: '../img/spriteIcons.png';
$icons-sprites: ($coffeebeans, $coffeepot, $cupcoffee, $cupheart, $kettle, $lupa, $lupeup, );
$icons: (215px, 166px, '../img/spriteIcons.png', $icons-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
